{"version":3,"sources":["Components/SearchBar.js","Components/Data.js","Components/Info.js","Components/LoginForm.js","Components/Navbar.js","Containers/App.js","serviceWorker.js","index.js"],"names":["SearchBar","_ref","searchChange","react_default","a","createElement","className","Form_default","Group","controlId","Control","as","type","placeholder","onChange","Data","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchData","url","data","results","fetch","then","response","json","retrivedData","concat","setState","newFuzzySearch","state","searchField","next","handleNestedUrl","catch","err","console","log","undefined","apiList","keys","titles","_loop","i","values","_loop2","j","title","length","prevState","map","item","name","objectSpread","defineProperty","Array","isArray","valuesArray","push","key","indexOf","_objectSpread4","props","match","createdDate","slice","handleSelect","event","target","value","select","handleClick","isClicked","handleSearch","options","shouldSort","tokenize","matchAllTokens","threshold","location","distance","result","Fuse","search","searchResults","userCallBackMethod","userEmail","Loading...","clickUrl","_this2","localStorage","getItem","JSON","parse","_this3","_this$state","filteredData","react_router","to","Row_default","Col_default","xs","Components_SearchBar","replace","onClick","bind","Component","Info","style","textAlign","LoginForm","handleSubmit","form","currentTarget","checkValidity","preventDefault","stopPropagation","isInvalid","handleValues","validated","checkboxToggle","isChecked","userData","email","elements","password","setItem","stringify","handleEmailChange","user","noValidate","onSubmit","Label","required","defaultValue","Feedback","Check","label","Button_default","variant","Nav","Navbar_default","bg","react_router_dom","Brand","href","Collapse","Text","App","handleUser","handleUrl","infoUrl","handleData","basename","Components_Navbar","Container_default","exact","path","render","Components_LoginForm","Components_Data","Components_Info","Boolean","window","hostname","ReactDOM","src_Containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2cf7377.chunk.js","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nconst SearchBar = ({ searchChange }) => {\r\n  return (\r\n    <div className=\"Form\">\r\n      <form>\r\n        <Form.Group controlId=\"formGroupSearch\">\r\n          <Form.Control\r\n            as=\"input\"\r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            onChange={searchChange}\r\n          />\r\n        </Form.Group>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;","import { Redirect } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\n//Component\r\nimport SearchBar from '../Components/SearchBar';\r\n//Libraries\r\nimport Fuse from \"fuse.js\";\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass Data extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      apiList: {},\r\n      keys: [],\r\n      data: [{ \"Loading...\": null }],\r\n      select: \"people\",\r\n      searchField: '',\r\n      searchResults: [],\r\n      isClicked: false,\r\n      clickUrl: \"\",\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Fetching initial keys and api addresses.\r\n    fetch('https://swapi.co/api/')\r\n      .then(response => response.json())\r\n      .then(results => this.fetchData(results[this.state.select], [], results))\r\n      .catch(err => console.log('Fail', err));\r\n    //Getting current user back to NavBar component.\r\n    if (localStorage.getItem('currentUser') !== null) {\r\n      localStorage.getItem('currentUser')\r\n      this.userCallBackMethod(JSON.parse(localStorage.getItem('currentUser')));\r\n    }\r\n  }\r\n  //Main fetching function.\r\n  fetchData = (url, data, results) => {\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        const retrivedData = data.concat(response.results)\r\n        this.setState({ data: retrivedData });\r\n        this.newFuzzySearch(this.state.searchField, retrivedData);\r\n        //Using recursive function to fetch all API pages.\r\n        if (response.next !== null) {\r\n          this.fetchData(response.next, retrivedData)\r\n        } else {\r\n          this.handleNestedUrl(retrivedData);\r\n          this.newFuzzySearch(this.state.searchField, retrivedData);\r\n        }\r\n      })\r\n      .catch(err => console.log('Fail', err));\r\n    if (results !== undefined) {\r\n      this.setState({ apiList: results, keys: Object.keys(results) })\r\n    }\r\n  }\r\n\r\n  handleNestedUrl = (retrivedData) => {\r\n    this.setState({ data: retrivedData });\r\n    const titles = Object.keys(retrivedData[0]);\r\n\r\n    for (let i = 0; i < retrivedData.length; i++) {\r\n      const values = Object.values(retrivedData[i]);\r\n\r\n      for (let j = 0; j < titles.length; j++) {\r\n        let title = titles[j];\r\n\r\n        if (values[j].length === 0) {\r\n          this.setState(prevState => ({\r\n            data: prevState.data.map(item =>\r\n              item.name === values[0] ? {\r\n                ...item,\r\n                [title]: \"n/a\"\r\n              } : item\r\n            )\r\n          }))\r\n        } else if (Array.isArray(values[j])) {\r\n          let valuesArray = [];\r\n          values[j].map(url =>\r\n            fetch(url)\r\n              .then(response => response.json())\r\n              .then(results => {\r\n                if (results.name !== undefined) {\r\n                  valuesArray.push(results.name);\r\n                } else if (results.title !== undefined) {\r\n                  valuesArray.push(results.title);\r\n                } else if (results.key !== undefined) {\r\n                  valuesArray.push(results.key);\r\n                }\r\n              })\r\n              .catch(err => console.log('Fail', err))\r\n          );\r\n          this.setState(prevState => ({\r\n            data: prevState.data.map(item =>\r\n              item.name === values[0] ? {\r\n                ...item,\r\n                [title]: valuesArray\r\n              } : item\r\n            )\r\n          }))\r\n        } else if (values[j].indexOf(\"swapi\") !== -1) {\r\n          fetch(values[j])\r\n            .then(response => response.json())\r\n            .then(results =>\r\n              this.setState(prevState => ({\r\n                data: prevState.data.map(item =>\r\n                  item.name === values[0] ? {\r\n                    ...item,\r\n                    [title]: results.name,\r\n                    url: this.props.url\r\n                  } : item\r\n                )\r\n              }))\r\n            )\r\n            .catch(err => console.log('Fail', err));\r\n        } else if (values[j].match(/:\\d{2}:/g)) {\r\n          const createdDate = values[j].slice(0, 10);\r\n          this.setState(prevState => ({\r\n            data: prevState.data.map(item =>\r\n              item.name === values[0] ? {\r\n                ...item,\r\n                [title]: createdDate\r\n              } : item\r\n            )\r\n          }))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSelect = (event) => {\r\n    this.fetchData(this.state.apiList[event.target.value], []);\r\n    this.setState({ select: event.target.value });\r\n  }\r\n\r\n  handleClick = (event) => {\r\n    this.props.url(event);\r\n    this.setState({ isClicked: !this.state.isClicked });\r\n  }\r\n\r\n  handleSearch = (event) => {\r\n    this.setState({ searchField: event.target.value });\r\n    this.newFuzzySearch(event.target.value, this.state.data);\r\n  }\r\n\r\n  //Fuzzy search function from fuse.js library.\r\n  newFuzzySearch = (searchField, data) => {\r\n    const titles = Object.keys(data[0]);\r\n    var options = {\r\n      shouldSort: true,\r\n      tokenize: true,\r\n      matchAllTokens: true,\r\n      threshold: 0.5,\r\n      location: 0,\r\n      distance: 100,\r\n      keys: titles\r\n    };\r\n    var fuse = new Fuse(data, options);\r\n    var result = fuse.search(searchField);\r\n    this.setState({ searchResults: result });\r\n  }\r\n\r\n  userCallBackMethod = (value) => {\r\n    this.props.userEmail(value);\r\n  }\r\n\r\n  render() {\r\n    const { keys, data, isClicked, searchResults, searchField } = this.state;\r\n    const titles = Object.keys(data[0]).slice(0, 4);\r\n\r\n    if (searchField !== \"\") {\r\n      var filteredData = searchResults\r\n    } else {\r\n      filteredData = data;\r\n    }\r\n    if (isClicked) {\r\n      return <Redirect to='/info' />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h2>Data From StarWars</h2>\r\n        <Row className=\"mt-4\">\r\n          <Col xs={4} className=\"selectField\">\r\n            <Form onChange={this.handleSelect}>\r\n              <Form.Control as=\"select\">\r\n                {keys.map(i => <option value={i} key={i}>{i}</option>)}\r\n              </Form.Control>\r\n            </Form>\r\n          </Col>\r\n          <Col xs={8} className=\"searchField\">\r\n            <SearchBar searchChange={this.handleSearch} />\r\n          </Col>\r\n        </Row>\r\n        <Row className='mt-4 mb-5'>\r\n          <Col className=\"col-centered\">\r\n            <table>\r\n              <tbody className=\"tableBody\">\r\n                <tr className='tableTitleRow'>\r\n                  {titles.map(title => <th key={title}>{title.replace(/_/g, \" \")}</th>)}\r\n                </tr>\r\n                {filteredData.map(i =>\r\n                  <tr key={Object.values(i)[0]} onClick={this.handleClick.bind(this, i.url)} className='selectRow'>\r\n                    <td key={Object.values(i)[0] + 0}>{Object.values(i)[0]}</td>\r\n                    <td key={Object.values(i)[0] + 1}>{Object.values(i)[1]}</td>\r\n                    <td key={Object.values(i)[0] + 2}>{Object.values(i)[2]}</td>\r\n                    <td key={Object.values(i)[0] + 3}>{Object.values(i)[3]}</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Data;","import { Redirect } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass Info extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      data: { \"Loading...\": null }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(this.props.url)\r\n      .then(response => response.json())\r\n      .then(results => this.handleNestedUrl(results))\r\n      .catch(err => console.log('Fail', err));\r\n  }\r\n\r\n  handleNestedUrl = (results) => {\r\n    this.setState({ data: results })\r\n    const titles = Object.keys(results);\r\n    const values = Object.values(results);\r\n\r\n    for (let i = 0; i < titles.length; i++) {\r\n      \r\n      if (values[i].length === 0) {\r\n        let title = titles[i];\r\n        this.setState(prevState => ({\r\n          data:\r\n          {\r\n            ...prevState.data,\r\n            [title]: \"n/a\"\r\n          }\r\n        }))\r\n      } else if (Array.isArray(values[i])) {\r\n        let valuesArray = [];\r\n        let title = titles[i];\r\n        values[i].map(url =>\r\n          fetch(url)\r\n            .then(response => response.json())\r\n            .then(results => {\r\n              if (results.name !== undefined) {\r\n                valuesArray.push(<div key={results.name}>{results.name}</div>);\r\n              } else if (results.title !== undefined) {\r\n                valuesArray.push(<div key={results.title}>{results.title}</div>);\r\n              } else if (results.key !== undefined) {\r\n                valuesArray.push(<div key={results.key}>{results.key}</div>);\r\n              }\r\n            })\r\n            .catch(err => console.log('Fail', err))\r\n        );\r\n        this.setState(prevState => ({\r\n          data:\r\n          {\r\n            ...prevState.data,\r\n            [title]: valuesArray\r\n          }\r\n        }))\r\n      } else if (values[i].indexOf(\"swapi\") !== -1) {\r\n        let title = titles[i];\r\n        fetch(values[i])\r\n          .then(response => response.json())\r\n          .then(results =>\r\n            this.setState(prevState => ({\r\n              data:\r\n              {\r\n                ...prevState.data,\r\n                [title]: results.name,\r\n                url: this.props.url\r\n              }\r\n            }))\r\n          )\r\n          .catch(err => console.log('Fail', err));\r\n      } else if (values[i].match(/:\\d{2}:/g)) {\r\n        const createdDate = values[i].slice(0, 10);\r\n        let title = titles[i];\r\n        this.setState(prevState => ({\r\n          data:\r\n          {\r\n            ...prevState.data,\r\n            [title]: createdDate\r\n          }\r\n        }))\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    const titles = Object.keys(data);\r\n    const values = Object.values(data);\r\n    if (this.props.url === \"\") {\r\n      return <Redirect to='/data' />;\r\n    }\r\n    return (\r\n      <div className=\"info\">\r\n        <h1>Detailed Information</h1>\r\n        <Row className='mt-5 mb-5'>\r\n          <Col className=\"col-centered\">\r\n            <table>\r\n              <tbody className=\"tableBody\">\r\n                <tr className='tableTitleRow' >\r\n                  <th key=\"title\" style={{ textAlign: \"center\" }}>\r\n                    {values[0] || 'The'} description\r\n                  </th>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <table>\r\n              <tbody className=\"tableBody\">\r\n                {titles.map(title =>\r\n                  <tr key={title}>\r\n                    <td key={'col-' + title}>\r\n                      {title.replace(/_/g, \" \")}\r\n                    </td>\r\n                    <td key={data[title]}>\r\n                      {data[title]}\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Info;","import { Redirect } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass LoginForm extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      user: {},\r\n      isChecked: false,\r\n      validated: false,\r\n      isInvalid: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem('savedUser') !== null) {\r\n      localStorage.getItem('savedUser')\r\n      this.setState({ user: JSON.parse(localStorage.getItem('savedUser')) });\r\n    }\r\n    if (localStorage.getItem('currentUser') !== null) {\r\n      localStorage.setItem('currentUser', JSON.stringify(''));\r\n      this.userCallBackMethod('');\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    event.currentTarget.checkValidity();\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.setState({ isInvalid: true });\r\n    } else {\r\n      this.handleValues(event);\r\n      this.setState({ validated: true, isInvalid: false });\r\n    }\r\n  };\r\n\r\n  checkboxToggle = (event) => {\r\n    this.setState({ isChecked: !this.state.isChecked })\r\n  }\r\n\r\n  handleValues = (event) => {\r\n    let userData =\r\n    {\r\n      email: event.target.elements.email.value,\r\n      password: event.target.elements.password.value\r\n    };\r\n    this.userCallBackMethod(userData.email);\r\n    if (this.state.isChecked) {\r\n      localStorage.setItem('savedUser', JSON.stringify(userData));\r\n    }\r\n  };\r\n\r\n  handleEmailChange = (event) => {\r\n    this.setState({ isInvalid: false });\r\n  };\r\n\r\n  userCallBackMethod = (value) => {\r\n    this.props.userEmail(value);\r\n  }\r\n\r\n  render() {\r\n    const { validated, isInvalid, user } = this.state;\r\n    if (validated) {\r\n      return <Redirect to='/data' />;\r\n    }\r\n    return (\r\n      <Col xs={6} className=\"col-centered\">\r\n        <Form noValidate validated={validated} onSubmit={this.handleSubmit} >\r\n          <Form.Group controlId=\"formEmail\">\r\n            <Form.Label>\r\n              Email address\r\n            </Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter email\"\r\n              isInvalid={isInvalid}\r\n              onChange={this.handleEmailChange}\r\n              defaultValue={user.email}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\" className=\"invalid-feedback\">\r\n              Please enter your email.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formPassword\">\r\n            <Form.Label>\r\n              Password\r\n            </Form.Label>\r\n            <Form.Control\r\n              required\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              defaultValue={user.password}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\" className=\"invalid-feedback\">\r\n              Please enter any password.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicChecbox\">\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              name=\"saveUser\"\r\n              label=\"Remember Me\"\r\n              onChange={this.checkboxToggle}\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;","import { Link } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\nclass Nav extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Form\">\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Link to=\"/\">\r\n            <Navbar.Brand href=\"/starwars_fanapp/#/\">\r\n              <h1 className='mt-2'>StarWars Fan App</h1>\r\n            </Navbar.Brand>\r\n          </Link>\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Link to=\"/\">\r\n              <Navbar.Text>\r\n                User: <a href=\"/starwars_fanapp/#/\">{this.props.user || \"Signed off\"}</a>\r\n              </Navbar.Text>\r\n            </Link>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;","import { HashRouter, Route } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\n//Components\r\nimport Data from '../Components/Data';\r\nimport Info from '../Components/Info';\r\nimport LoginForm from '../Components/LoginForm';\r\nimport Nav from '../Components/Navbar';\r\n///Libraries\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      userEmail: '',\r\n      infoUrl: ''\r\n    }\r\n  }\r\n\r\n  handleUser = (value) => {\r\n    this.setState({ userEmail: value });\r\n    localStorage.setItem('currentUser', JSON.stringify(value));\r\n  }\r\n\r\n  handleUrl = (value) => {\r\n    this.setState({ infoUrl: value });\r\n  }\r\n\r\n  handleData = (value) => {\r\n    this.setState({ data: value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //Use of HashRouter for gh-pages deployment\r\n      <HashRouter basename='/'>\r\n        <div className=\"App\">\r\n          <Nav user={this.state.userEmail} />\r\n          <Container className=\"mt-5\">\r\n            <Row className=\"mt-3\">\r\n              <Col className=\"col-centered\">\r\n                <Route\r\n                  exact\r\n                  path='/'\r\n                  render={(props) =>\r\n                    <LoginForm\r\n                      userEmail={this.handleUser}\r\n                    />\r\n                  }\r\n                />\r\n                <Route\r\n                  path='/data'\r\n                  render={(props) =>\r\n                    <Data\r\n                      url={this.handleUrl}\r\n                      userEmail={this.handleUser}\r\n                    />\r\n                  }\r\n                />\r\n                <Route\r\n                  path='/info'\r\n                  render={(props) =>\r\n                    <Info\r\n                      url={this.state.infoUrl}\r\n                    />\r\n                  }\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}